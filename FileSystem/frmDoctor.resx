<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>